<!DOCTYPE html>
<html>
  <head>
    <title>Place Autocomplete and Directions</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <link rel="stylesheet" href="/stylesheets/style.css">
  </head>
  <body>
    <div id="header">
      <ul>
        <li><a href="#">Home</a></li>
        <li><a href="#">About</a></li>
        <li><a href="#">Login</a></li>
        <li><a href="#">Signup</a></li>
      </ul>
    </div>
    <input id="origin-input" class="controls" type="text" placeholder="Origin location">
    <input id="destination-input" class="controls" type="text" placeholder="Destination location">
    <div id="mySidebar" class="sidebar">
      <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
      <form class="checkForm">
        <input id="fastestRoute" type="checkbox" onchange='handleChange(this);' value=false><span>Fastest Route</span><br>
        <input id="wandering" type="checkbox" onchange='handleChange(this);' value=false><span>Wandering</span><br>
        <input id="disability" type="checkbox" onchange='handleChange(this);' value=false><span>Disability</span>
      </form>
      </div>
      <div id="main">
        <button class="openbtn" onclick="openNav()">&#9776;</button>
      </div>
      <div id="container">
        <div id="map" class="column"></div>
        <div id="left" class="column"></div>
        <div id="right" class="column"></div>
      </div>
      
      <div id="footer"></div>

<script>
  // This example requires the Places library. Include the libraries=places
  // parameter when you first load the API. For example:
  // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">


  function openNav() {
    document.getElementById("mySidebar").style.width = "250px";
    document.getElementById("main").style.marginLeft = "250px";
  }

  function closeNav() {
    document.getElementById("mySidebar").style.width = "0";
    document.getElementById("main").style.marginLeft = "0";
  }

  function handleChange(checkbox) {
    if (checkbox.value == "on") {
      document.getElementById("fastestRoute").value = true;
    } else {
      document.getElementById("fastestRoute").value = true
    }
  }


  function initMap() {
    var map = new google.maps.Map(document.getElementById('map'), {
      mapTypeControl: false,
      center: {lat: -37.8, lng: 144.96},
      zoom: 13
    });

    new AutocompleteDirectionsHandler(map);
  }

  /**
   * @constructor
   */
  function AutocompleteDirectionsHandler(map) {
    this.map = map;
    this.originPlaceId = null;
    this.destinationPlaceId = null;
    this.travelMode = 'WALKING';
    var originInput = document.getElementById('origin-input');
    var destinationInput = document.getElementById('destination-input');
    // var modeSelector = document.getElementById('mode-selector');
    this.directionsService = new google.maps.DirectionsService;
    this.directionsDisplay = new google.maps.DirectionsRenderer;
    this.directionsDisplay.setMap(map);

    var originAutocomplete = new google.maps.places.Autocomplete(
      originInput, {placeIdOnly: true});
    var destinationAutocomplete = new google.maps.places.Autocomplete(
      destinationInput, {placeIdOnly: true});

    this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
    this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');

    this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);
    this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);

  }


  AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function (autocomplete, mode) {
    var me = this;
    autocomplete.bindTo('bounds', this.map);
    autocomplete.addListener('place_changed', function () {
      var place = autocomplete.getPlace();
      if (!place.place_id) {
        window.alert("Please select an option from the dropdown list.");
        return;
      }
      if (mode === 'ORIG') {
        me.originPlaceId = place.place_id;
      } else {
        me.destinationPlaceId = place.place_id;
      }
      me.route();
    });

  };

  AutocompleteDirectionsHandler.prototype.route = function () {
    if (!this.originPlaceId || !this.destinationPlaceId) {
      return;
    }
    var me = this;

    this.directionsService.route({
      origin: {'placeId': this.originPlaceId},
      destination: {'placeId': this.destinationPlaceId},
      travelMode: this.travelMode
    }, function (mapResponse, status) {
      //let wayPts = []
      var features = [];
      if (status === 'OK') {
        // wayPts.push({
        //   location: {lat:-34, lng:151},
        //   stopover: true
        // });
        // me.routeTwo(wayPts)
        let xhr = new XMLHttpRequest();
        xhr.open("POST", "/path", true);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.responseType = 'json';
        xhr.onreadystatechange = function () {
          if (this.readyState === 4 && this.status === 200) {
            let body = xhr.response;
            let toilet_list = body.toilet;
            let wayPts = body.way_point;
            console.log(body);
            for (let toilet of toilet_list){
              features.push({
                position: new google.maps.LatLng(toilet.lat, toilet.lng)
              })

            }
            
            me.routeTwo(wayPts, features);
          }
        };
        let send_path = (mapResponse.routes[0].overview_path).map(x => x.toJSON());
        let dist_path = (mapResponse.routes[0].legs).reduce((x, y) => x + y.distance);
        console.log(send_path);
        let c1 = document.getElementById("fastestRoute").value;
        let c2 = document.getElementById("wandering").value;
        let c3 = document.getElementById("disability").value;
        xhr.send(JSON.stringify({
          'path': send_path,
          'distance': dist_path,
          'fastestRoute': c1,
          'wandering': c2,
          'diability': c3
        }));
      } else {
        window.alert('Directions request failed due to ' + status);
      }
    });
  };
  AutocompleteDirectionsHandler.prototype.routeTwo = function (waypts, features) {
    if (!this.originPlaceId || !this.destinationPlaceId) {
      return;
    }
    var me = this;
    var toiletIcon = '/toilet.png';

    this.directionsService.route({
      origin: {'placeId': this.originPlaceId},
      destination: {'placeId': this.destinationPlaceId},
      travelMode: this.travelMode,
      waypoints: waypts,
      optimizeWaypoints: true
    }, function (response, status) {
      if (status === 'OK') {
        me.directionsDisplay.setDirections(response);
        features.forEach(function(feature) {
          var marker = new google.map.Marker({
            position: feature.position,
            icon: toiletIcon,
            map:map
          })
        });
      } else {
        window.alert('Directions request failed due to ' + status);
      }
    });
  };

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAty0toJ0mIxSCgA03HJq2IcgLArpRh1Rk&libraries=places&callback=initMap"
        async defer></script>
</body>
</html>